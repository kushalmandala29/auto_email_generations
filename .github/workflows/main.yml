name: CI/CD to EC2 (Selective)

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
   
  deploy:
    needs: build
    
    env:
      AWS_REGION: us-east-1
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        # Only checkout specific files
        fetch-depth: 1
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ env.EC2_HOST }}
        EC2_USERNAME: ${{ env.EC2_USERNAME }}
        SSH_PRIVATE_KEY: ${{ env.SSH_PRIVATE_KEY }}
      run: |
        # Install necessary dependencies
        sudo apt-get update
        sudo apt-get install -y openssh-client
        
        # Configure SSH key
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # Copy only the relevant files to EC2 instance
        scp -o StrictHostKeyChecking=no -r templates model requirements.txt app.py $EC2_USERNAME@$EC2_HOST:/path/to/app
        
        # Run application on EC2 instance
        ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST 'cd /path/to/app && pip install -r requirements.txt && python3 app.py'
